// Code generated by entc, DO NOT EDIT.

package ent

import "context"

func (i *Instance) User(ctx context.Context) (*User, error) {
	result, err := i.Edges.UserOrErr()
	if IsNotLoaded(err) {
		result, err = i.QueryUser().Only(ctx)
	}
	return result, err
}

func (i *Instance) Slide(ctx context.Context) (*Slide, error) {
	result, err := i.Edges.SlideOrErr()
	if IsNotLoaded(err) {
		result, err = i.QuerySlide().Only(ctx)
	}
	return result, err
}

func (s *Slide) Instance(ctx context.Context) (*Instance, error) {
	result, err := s.Edges.InstanceOrErr()
	if IsNotLoaded(err) {
		result, err = s.QueryInstance().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (s *Slide) User(ctx context.Context) (*User, error) {
	result, err := s.Edges.UserOrErr()
	if IsNotLoaded(err) {
		result, err = s.QueryUser().Only(ctx)
	}
	return result, err
}

func (u *User) Instances(ctx context.Context) ([]*Instance, error) {
	result, err := u.Edges.InstancesOrErr()
	if IsNotLoaded(err) {
		result, err = u.QueryInstances().All(ctx)
	}
	return result, err
}

func (u *User) Slides(ctx context.Context) ([]*Slide, error) {
	result, err := u.Edges.SlidesOrErr()
	if IsNotLoaded(err) {
		result, err = u.QuerySlides().All(ctx)
	}
	return result, err
}
