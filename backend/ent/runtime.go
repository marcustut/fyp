// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/marcustut/fyp/backend/ent/instance"
	"github.com/marcustut/fyp/backend/ent/link"
	"github.com/marcustut/fyp/backend/ent/schema"
	"github.com/marcustut/fyp/backend/ent/schema/ulid"
	"github.com/marcustut/fyp/backend/ent/slide"
	"github.com/marcustut/fyp/backend/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	instanceMixin := schema.Instance{}.Mixin()
	instanceMixinFields0 := instanceMixin[0].Fields()
	_ = instanceMixinFields0
	instanceMixinFields1 := instanceMixin[1].Fields()
	_ = instanceMixinFields1
	instanceMixinFields2 := instanceMixin[2].Fields()
	_ = instanceMixinFields2
	instanceFields := schema.Instance{}.Fields()
	_ = instanceFields
	// instanceDescArchitecture is the schema descriptor for architecture field.
	instanceDescArchitecture := instanceMixinFields1[7].Descriptor()
	// instance.ArchitectureValidator is a validator for the "architecture" field. It is called by the builders before save.
	instance.ArchitectureValidator = instanceDescArchitecture.Validators[0].(func(string) error)
	// instanceDescAvailabilityZone is the schema descriptor for availability_zone field.
	instanceDescAvailabilityZone := instanceMixinFields1[8].Descriptor()
	// instance.AvailabilityZoneValidator is a validator for the "availability_zone" field. It is called by the builders before save.
	instance.AvailabilityZoneValidator = instanceDescAvailabilityZone.Validators[0].(func(string) error)
	// instanceDescCreatedAt is the schema descriptor for created_at field.
	instanceDescCreatedAt := instanceMixinFields2[0].Descriptor()
	// instance.DefaultCreatedAt holds the default value on creation for the created_at field.
	instance.DefaultCreatedAt = instanceDescCreatedAt.Default.(func() time.Time)
	// instanceDescUpdatedAt is the schema descriptor for updated_at field.
	instanceDescUpdatedAt := instanceMixinFields2[1].Descriptor()
	// instance.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	instance.DefaultUpdatedAt = instanceDescUpdatedAt.Default.(func() time.Time)
	// instanceDescID is the schema descriptor for id field.
	instanceDescID := instanceMixinFields0[0].Descriptor()
	// instance.DefaultID holds the default value on creation for the id field.
	instance.DefaultID = instanceDescID.Default.(func() ulid.ID)
	linkMixin := schema.Link{}.Mixin()
	linkMixinFields0 := linkMixin[0].Fields()
	_ = linkMixinFields0
	linkMixinFields1 := linkMixin[1].Fields()
	_ = linkMixinFields1
	linkMixinFields2 := linkMixin[2].Fields()
	_ = linkMixinFields2
	linkFields := schema.Link{}.Fields()
	_ = linkFields
	// linkDescVisitedCount is the schema descriptor for visited_count field.
	linkDescVisitedCount := linkMixinFields1[2].Descriptor()
	// link.DefaultVisitedCount holds the default value on creation for the visited_count field.
	link.DefaultVisitedCount = linkDescVisitedCount.Default.(int64)
	// linkDescCreatedAt is the schema descriptor for created_at field.
	linkDescCreatedAt := linkMixinFields2[0].Descriptor()
	// link.DefaultCreatedAt holds the default value on creation for the created_at field.
	link.DefaultCreatedAt = linkDescCreatedAt.Default.(func() time.Time)
	// linkDescUpdatedAt is the schema descriptor for updated_at field.
	linkDescUpdatedAt := linkMixinFields2[1].Descriptor()
	// link.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	link.DefaultUpdatedAt = linkDescUpdatedAt.Default.(func() time.Time)
	// linkDescID is the schema descriptor for id field.
	linkDescID := linkMixinFields0[0].Descriptor()
	// link.DefaultID holds the default value on creation for the id field.
	link.DefaultID = linkDescID.Default.(func() ulid.ID)
	slideMixin := schema.Slide{}.Mixin()
	slideMixinFields0 := slideMixin[0].Fields()
	_ = slideMixinFields0
	slideMixinFields1 := slideMixin[1].Fields()
	_ = slideMixinFields1
	slideMixinFields2 := slideMixin[2].Fields()
	_ = slideMixinFields2
	slideFields := schema.Slide{}.Fields()
	_ = slideFields
	// slideDescDeleted is the schema descriptor for deleted field.
	slideDescDeleted := slideMixinFields1[5].Descriptor()
	// slide.DefaultDeleted holds the default value on creation for the deleted field.
	slide.DefaultDeleted = slideDescDeleted.Default.(bool)
	// slideDescCreatedAt is the schema descriptor for created_at field.
	slideDescCreatedAt := slideMixinFields2[0].Descriptor()
	// slide.DefaultCreatedAt holds the default value on creation for the created_at field.
	slide.DefaultCreatedAt = slideDescCreatedAt.Default.(func() time.Time)
	// slideDescUpdatedAt is the schema descriptor for updated_at field.
	slideDescUpdatedAt := slideMixinFields2[1].Descriptor()
	// slide.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	slide.DefaultUpdatedAt = slideDescUpdatedAt.Default.(func() time.Time)
	// slideDescID is the schema descriptor for id field.
	slideDescID := slideMixinFields0[0].Descriptor()
	// slide.DefaultID holds the default value on creation for the id field.
	slide.DefaultID = slideDescID.Default.(func() ulid.ID)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userMixinFields1 := userMixin[1].Fields()
	_ = userMixinFields1
	userMixinFields2 := userMixin[2].Fields()
	_ = userMixinFields2
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userMixinFields1[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = func() func(string) error {
		validators := userDescUsername.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(username string) error {
			for _, fn := range fns {
				if err := fn(username); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userMixinFields1[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescFullName is the schema descriptor for full_name field.
	userDescFullName := userMixinFields1[2].Descriptor()
	// user.FullNameValidator is a validator for the "full_name" field. It is called by the builders before save.
	user.FullNameValidator = func() func(string) error {
		validators := userDescFullName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(full_name string) error {
			for _, fn := range fns {
				if err := fn(full_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescAvatarURL is the schema descriptor for avatar_url field.
	userDescAvatarURL := userMixinFields1[4].Descriptor()
	// user.AvatarURLValidator is a validator for the "avatar_url" field. It is called by the builders before save.
	user.AvatarURLValidator = func() func(string) error {
		validators := userDescAvatarURL.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(avatar_url string) error {
			for _, fn := range fns {
				if err := fn(avatar_url); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescBio is the schema descriptor for bio field.
	userDescBio := userMixinFields1[5].Descriptor()
	// user.BioValidator is a validator for the "bio" field. It is called by the builders before save.
	user.BioValidator = userDescBio.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields2[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields2[1].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userMixinFields0[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() ulid.ID)
}
